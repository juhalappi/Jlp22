#Gfortran Makefile for debug version of Jlp22, result jlp22.exe
# use this file: make -f Makefile_debug
# The compiler
FC = gfortran
# flags for debugging or for maximum performance, comment as necessary
# FCFLAGS = -ggdb -O0 -pg -fcheck=all -g -fbacktrace      -pg produces gmon.out

FCFLAGS = -ggdb -O0 -fcheck=all -g -fbacktrace  -fmax-errors=6 
#-fsanitize=address,undefined
#-Wuninitialized -O2

#FCFLAGS = -ggdb -O0 -fbounds-check  -pg -fcheck=all -g -fbacktrace 
#FCFLAGS = -ggdb -O0 -fbounds-check  -pg -fcheck=all -g -Wall 
# note Wall produces all kinds of warnings ,should be checked which are relevant 
# flags forall (e.g. look for system .mod files, required in gfortran)
# FCFLAGS += -I/usr/include
FCFLAGS += -I/c:/jlp22

# List of executables to be built within the package
PROGRAMS = jlp22.exe

# "make" builds all
all: $(PROGRAMS)

jlp22.exe : jmodules.o\
		 own1mod_2.o\
		 own2mod_2.o\
		 own3mod_2.o\
		 jownmod_2.o\
		 own1_2.o\
		 own2_2.o\
		 own3_2.o\
		 jutilities_2.o\
		 fletcherd.o\
		 jlp_2.o\
		 matsub.o\
		 jsysdep_gfortran_2.o\
		 j_2.o\
		jmain.o		 



	$(FC) $(FCFLAGS) -o jlp22.exe \
		jmodules.o\
		 own1mod_2.o\
		 own2mod_2.o\
		 own3mod_2.o\
		 jownmod_2.o\
		 own1_2.o\
		 own2_2.o\
		 own3_2.o\
		 jutilities_2.o\
		 fletcherd.o\
		 jlp_2.o\
		 matsub.o\
		 jsysdep_gfortran_2.o\
		 j_2.o\
		jmain.o



jownmod_2.o : jmodules.o own1mod_2.o own2mod_2.o own3mod_2.o
jutilities_2.o :jmodules.o jownmod_2.o
own1mod_2.o : jmodules.o 
own2mod_2.o : jmodules.o 
own3mod_2.o : jmodules.o 
own1_2.o : jmodules.o
own2_2.o : jmodules.o
own3_2.o : jmodules.o
j_2.o : jmodules.o 



# General rule for building prog from prog.o; $^ (GNU extension) is
# used in order to list additional object files on which the
# executable depends
%: %.o
	$(FC) $(FCFLAGS) -o $@ $^ $(LDFLAGS)

# General rules for building prog.o from prog.f90 or prog.F90; $< is
# used in order to list only the first prerequisite (the source file)
# and not the additional prerequisites such as module or include files
%.o: %.for
	$(FC) $(FCFLAGS) -c $<
%.o: %.f
	$(FC) $(FCFLAGS) -c $<
%.o: %.f90
	$(FC) $(FCFLAGS) -c $<
